
The goal of this program is to simulate a router network in which routers, or the interfaces between them, fail intermittently. The network follows the Open Shortest Path First (OSPF) Protocol and the scope of the network is a single OSPF area, or a subnet. Utilizing Dijkstra's Algorithm, we can calculate the shortest path between two routers.

Read from a list of routers -> Create a thread for each router ->
How are the sequence numbers from link state advertisements uniquely generated?
    Each router in an OSPF network is assigned a unique 32-bit router ID, which is typically the highest IP address on any active interface of the router. When a router originates an LSA, it includes its own router ID in the LSA header, which serves as the Advertising router field. This ensures that each router's LSAs are uniquely identified by their router ID.
    In addition to the router ID, OSPF LSAs also contain a 32-bit LS sequence number that is used to identify the version of the LSA. When a router originates an LSA, it assigns a new sequence number to the LSA. The sequence number is incremented each time the LSA is updated, so that each version of the LSA has a unique sequence number.
    To ensure that sequence numbers are unique across the entire network, OSPF uses a combination of the originating router's ID and a local counter to generate the sequence number for each LSA. Specifically, the sequence number is a concatenation of the router ID and a local counter value that is incremented each time the router generates an LSA. This concatenation produces a unique 64-bit value that is then truncated to a 32-bit sequence number by discarding the high-order 32 bits.
    By using this method, OSPF ensures that each router's LSAs are uniquely identified by its router ID, and that the sequence numbers for each LSA are unique across the entire network. This ensures that routers can accurately determine which LSAs are the most recent, and that they can build and maintain an accurate representation of the network topology.